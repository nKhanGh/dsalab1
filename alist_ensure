template<class T>
void ArrayList<T>::ensureCapacity(int cap){
    /* 
        if cap > capacity: 
            new_capacity = capacity * 1.5;
            create new array with new_capacity
        else: do nothing
    */
    if(cap > capacity){
        int new_cap = capacity *  1.5;
        T* dat = new int[new_cap];
        for(int i = 0; i < count; i++) dat[i] = data[i];
        delete[] data;
        data = dat;
        capacity = new_cap;
    }
}

template <class T>
void ArrayList<T>::add(T e) {
    if(count == capacity - 1) ensureCapacity(capacity + 1);
    data[count++] = e;
}

template<class T>
void ArrayList<T>::add(int index, T e) {
    if(index < 0 || index > count) {
        throw std::out_of_range("the input index is out of range!");
    }
    if(count == capacity - 1) ensureCapacity(capacity + 1);
    for(int i = count; i > index; i--){
        data[i] = data[i - 1];
    }
    data[index] = e;
    count++;
}

template<class T>
int ArrayList<T>::size() {
    return count;
}
